package com.project2;
import java.sql.*;
import java.util.Scanner;
public class Accounts
{
    private static  Connection con;
    private static Scanner sc;

    public Accounts(Connection con,Scanner sc)
    {
        this.con=con;
        this.sc=sc;
    }
    public long openAccount(String email)
    {
        if(!(account_exist(email))) {
            System.out.println("Enter full_name : ");
            String name = sc.nextLine();
            System.out.println("Enter intitialAmount : ");
            double amount = sc.nextDouble();
            sc.nextLine();
            System.out.println("Enter your Security pin : ");
            String password = sc.nextLine();


            try {
                long accountNumber = generateAccountNumber();
                String insertQuery = "Insert into accounts(accountNumber,full_name,email,balance,security_pin) values(?,?,?,?,?)";
                PreparedStatement preparedStatement = con.prepareStatement(insertQuery);

                preparedStatement.setLong(1, accountNumber);
                preparedStatement.setString(2, name);
                preparedStatement.setString(3, email);
                preparedStatement.setDouble(4, amount);
                preparedStatement.setString(5, password);
                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    return accountNumber;
                } else {
                    throw new RuntimeException("Account Creation Failed...");
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
        throw new RuntimeException("Account alreaady Exist");
    }

    public long getAccount_Number(String email) {
        String fQuery = "Select accountNumber from accounts where email=?;";
        try {
            PreparedStatement preparedStatement = con.prepareStatement(fQuery);
            preparedStatement.setString(1,email);
            ResultSet rs=preparedStatement.executeQuery();
            if(rs.next())
            {
                return rs.getLong("accountNumber");
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        throw new RuntimeException("Account Number doesn't Exist");
    }
private long generateAccountNumber()
{
    String query="Select accountNumber from accounts ORDER BY accountNumber DESC LIMIT 1;";

    try {
        Statement stmt = con.createStatement();
        ResultSet rs=stmt.executeQuery(query);
        if(rs.next())
        {
            long accNumber=rs.getLong("accountNumber")+1;
            return accNumber;
        }
        else
        {
            return 10000100;
        }
    }
    catch(SQLException e)
    {
        System.out.println(e.getMessage());
    }
     return 10000100;
}
public boolean account_exist(String email)
{
    String selQuery="Select accountNumber from accounts where email=?;";
    try
    {
    PreparedStatement preparedStatement=con.prepareStatement(selQuery);
    preparedStatement.setString(1,email);
    ResultSet rs=preparedStatement.executeQuery();
    if(rs.next())
    {
        return true;
    }
    else
    {
        return false;
    }
    }
    catch(SQLException e)
    {
        System.out.println(e.getMessage());
    }
    return false;
}
}
